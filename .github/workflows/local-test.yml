name: Database Migration
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x  # Replace '6.0.x' with the specific .NET 6 version you need
        
      - name: Restore dependencies
        working-directory: ./DataBaseMigration  # Adjust as needed
        run: dotnet restore

      - name: Build Database Migration
        working-directory: ./DataBaseMigration  # Adjust as needed
        run: dotnet build

      - name: Run Database Migration
        id: run-migration
        working-directory: ./DataBaseMigration  # Adjust as needed
        run: |
            if dotnet run --project ./DataBaseMigration.csproj -- -c DatabaseMigrationConfiguration; then
            echo "::set-output name=result::success"  # Set the result to success if the migration succeeds
            else
            echo "::set-output name=result::failure"  # Set the result to failure if the migration fails
            fi

      - name: Check Migration Result
        if: steps.run-migration.outcome == 'failure'
        run: |
          echo "The migration failed. You can add additional steps or notifications here."
          exit 1  # Mark the workflow as failed

      - name: Migration Succeeded
        if: steps.run-migration.outcome == 'success'
        run: |
          echo "The migration succeeded. You can add additional steps or notifications here."
